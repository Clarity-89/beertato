type Ingredient {
  id: ID!
  amount: Float!
  timing: Float
  item: Item!
}

input IngredientInput {
  id: ID
  amount: Float!
  timing: Float
  item: ID!
}

type Recipe {
  id: ID!
  name: String!
  volume: Int
  boilVolume: Int
  abv: Float
  originalGravity: Float
  finalGravity: Float
  notes: String
  description: String
  ebc: Float
  ibu: Int
  srm: Float
  ph: Float
  attenuation: Float
  mashTemp: Int
  mashDuration: Float
  fermentationTemp: Int
  fermentationDuration: Int
  brewDate: String
  ingredients: [Ingredient]
}

input RecipeInput {
  name: String!
  volume: Int
  boilVolume: Int
  abv: Float
  originalGravity: Float
  finalGravity: Float
  notes: String
  description: String
  ebc: Float
  ibu: Int
  srm: Float
  ph: Float
  attenuation: Float
  mashTemp: Int
  mashDuration: Float
  fermentationTemp: Int
  fermentationDuration: Int
  brewDate: String
  ingredients: [IngredientInput]
}

extend type Query {
  recipes: [Recipe] @authenticated
  recipe(id: ID!): Recipe @authenticated
}

extend type Mutation {
  addRecipe(input: RecipeInput!): Recipe @authenticated
  updateRecipe(id: ID!, input: RecipeInput!): Recipe @authenticated
  deleteRecipe(id: ID!): ID @authenticated
}
